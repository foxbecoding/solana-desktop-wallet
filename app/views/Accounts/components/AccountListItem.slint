import {VerticalBox} from "std-widgets.slint";
import {AccountManager, Account} from "../../../managers/account-manager.slint";
import {IconButton} from "../../../components/IconButton.slint";
import {Theme} from "../../../theme.slint";

export component AccountListItem inherits TouchArea {
    in property <Account> account;
    in property <brush> background_color;
    private property <bool> is_selected_item: AccountManager.selected_account.id == account.id;
    private property <brush> item_hover_state: is_selected_item ? background_color.brighter(0.20) : Theme.surface.brighter(0.10);
    private property <brush> item_pressed_state: is_selected_item ? background_color.darker(0.10) : Theme.surface.with-alpha(0.90);

    clicked => {
        AccountManager.selected_account = account;
        AccountManager.change_account(account.id);
    }

    item := Rectangle {
        background: background_color;
        border-radius: 9px;
        VerticalBox {
            alignment: center;
            Rectangle {
                height: 48px;
                HorizontalLayout {
                    alignment: space-between;
                    VerticalLayout {
                        alignment: center;
                        width: 300px;
                        Text {
                            font-size: 21px;
                            font-weight: 500;
                            text: account.name;
                            color: Theme.on_background;
                            horizontal-alignment: left;
                            overflow: TextOverflow.elide;
                        }
                    }

                    VerticalLayout {
                        alignment: center;
                        width: 300px;
                        HorizontalLayout {
                            alignment: start;
                            spacing: 9px;
                            Text {
                                font-size: 21px;
                                font-weight: 500;
                                text: account.pubkey_display;
                                color: Theme.on_background;
                                horizontal-alignment: left;
                            }
                            IconButton {
                                icon: @image-url("../../../assets/icons/open-icon.svg");
                                clicked => {
                                    AccountManager.view_account(account.pubkey)
                                }
                            }
                        }
                    }

                    VerticalLayout {
                        alignment: center;
                        width: 200px;
                        HorizontalLayout {
                            alignment: start;
                            spacing: 9px;
                            Image {
                                source: @image-url("../../../assets/icons/solana-icon.svg");
                                width: 21px;
                                horizontal-alignment: left;
                            }
                            Text {
                                font-size: 21px;
                                font-weight: 500;
                                text: "\{account.balance}";
                                color: Theme.on_background;
                                horizontal-alignment: left;
                            }
                        }
                    }
                }
            }
        }
    }

    states [
        pressed when root.pressed: {
            item.background: item_pressed_state;
        }
        hover when root.has-hover: {
            item.background: item_hover_state;
        }
    ]
}