import {HorizontalBox, Palette} from "std-widgets.slint";
import {Theme} from "../theme.slint";

export enum AppButtonType {
    DEFAULT,
    PRIMARY,
    SECONDARY
}



export component AppButton inherits Rectangle {
    in property <AppButtonType> type: AppButtonType.DEFAULT;
    in property <physical-length> button_height: 32px;
    in property <physical-length> button_width: 150px;
    in property <physical-length> button_radius: 6px;
    in property <brush> background_color: Palette.alternate-background;
    in property <string> label;
    in property <brush> label_color: Palette.foreground;
    in property <physical-length> label_size: 12px;
    in property <int> label_font_weight: 600;
    in property <image> icon;
    in property <brush> icon_color: Palette.foreground;
    in property <physical-length> icon_size: 16px;

    callback clicked();

    pure function get_background_color() -> brush {
        if (type == AppButtonType.PRIMARY) {
            return Theme.primary;
        } else if (type == AppButtonType.SECONDARY) {
            return Theme.secondary;
        }
        return background_color;
    }

    height: button_height;
    width: button_width;
    border-radius: button_radius;
    background: background_color;

    HorizontalBox {
        alignment: center;
        if icon.width > 0 : VerticalLayout {
            alignment: center;
            Image {source: icon; width: icon_size; colorize: icon_color;}
        }
        VerticalLayout {
            alignment: center;
            Text {text: label; font-size: label_size; font-weight: label_font_weight; color: label_color;}
        }
    }

    states [
        pressed when touch.pressed: {
            root.background: background_color.with-alpha(0.65);
        }
        hover when touch.has-hover: {
            root.background: background_color.with-alpha(0.8);
        }
    ]

    touch := TouchArea {
        clicked => { root.clicked(); }
    }
}